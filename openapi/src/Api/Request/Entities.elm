{-
   GraphSense API
   GraphSense API provides programmatic access to various ledgers' addresses, entities, blocks, transactions and tags for automated and highly efficient forensics tasks.

   The version of the OpenAPI document: 1.11.1
   Contact: contact@ikna.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Entities exposing (..)

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode











type Order_
    = Order_Asc
    | Order_Desc


orderVariants : List Order_
orderVariants =
    [ Order_Asc
    , Order_Desc
    ]


stringFromOrder_ : Order_ -> String
stringFromOrder_ model =
    case model of
        Order_Asc ->
            "asc"

        Order_Desc ->
            "desc"


makeOrder_FromString : String -> Maybe Order_
makeOrder_FromString str =
    case str of
    "asc" ->
        Just Order_Asc

    "desc" ->
        Just Order_Desc

    _ ->
        Nothing





type Direction
    = DirectionIn
    | DirectionOut


directionVariants : List Direction
directionVariants =
    [ DirectionIn
    , DirectionOut
    ]


stringFromDirection : Direction -> String
stringFromDirection model =
    case model of
        DirectionIn ->
            "in"

        DirectionOut ->
            "out"


makeDirectionFromString : String -> Maybe Direction
makeDirectionFromString str =
    case str of
    "in" ->
        Just DirectionIn

    "out" ->
        Just DirectionOut

    _ ->
        Nothing





type Key
    = KeyCategory
    | KeyAddresses
    | KeyEntities
    | KeyTotalReceived
    | KeyBalance


keyVariants : List Key
keyVariants =
    [ KeyCategory
    , KeyAddresses
    , KeyEntities
    , KeyTotalReceived
    , KeyBalance
    ]


stringFromKey : Key -> String
stringFromKey model =
    case model of
        KeyCategory ->
            "category"

        KeyAddresses ->
            "addresses"

        KeyEntities ->
            "entities"

        KeyTotalReceived ->
            "total_received"

        KeyBalance ->
            "balance"


makeKeyFromString : String -> Maybe Key
makeKeyFromString str =
    case str of
    "category" ->
        Just KeyCategory

    "addresses" ->
        Just KeyAddresses

    "entities" ->
        Just KeyEntities

    "total_received" ->
        Just KeyTotalReceived

    "balance" ->
        Just KeyBalance

    _ ->
        Nothing






getEntity : (String) -> (Int) -> Maybe (Bool) -> Maybe (Bool) -> Api.Request Api.Data.Entity
getEntity currency_path entity_path excludeBestAddressTag_query includeActors_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "exclude_best_address_tag", Maybe.map ((\val -> if val then "true" else "false")) excludeBestAddressTag_query ), ( "include_actors", Maybe.map ((\val -> if val then "true" else "false")) includeActors_query ) ]
        []
        Nothing
        Api.Data.entityDecoder



listAddressTagsByEntity : (String) -> (Int) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.AddressTags
listAddressTagsByEntity currency_path entity_path page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}/tags"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.addressTagsDecoder



listEntityAddresses : (String) -> (Int) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.EntityAddresses
listEntityAddresses currency_path entity_path page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}/addresses"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.entityAddressesDecoder



listEntityLinks : (String) -> (Int) -> (Int) -> Maybe (Int) -> Maybe (Int) -> Maybe (Order_) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.Links
listEntityLinks currency_path entity_path neighbor_query minHeight_query maxHeight_query order_query page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}/links"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "neighbor", Just <| (String.fromInt) neighbor_query ), ( "min_height", Maybe.map (String.fromInt) minHeight_query ), ( "max_height", Maybe.map (String.fromInt) maxHeight_query ), ( "order", Maybe.map (stringFromOrder_) order_query ), ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.linksDecoder



listEntityNeighbors : (String) -> (Int) -> (Direction) -> Maybe (List Int) -> Maybe (Bool) -> Maybe (Bool) -> Maybe (Bool) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.NeighborEntities
listEntityNeighbors currency_path entity_path direction_query onlyIds_query includeLabels_query excludeBestAddressTag_query includeActors_query page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}/neighbors"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "direction", Just <| (stringFromDirection) direction_query ), ( "only_ids", Maybe.map (String.join "," << List.map String.fromInt) onlyIds_query ), ( "include_labels", Maybe.map ((\val -> if val then "true" else "false")) includeLabels_query ), ( "exclude_best_address_tag", Maybe.map ((\val -> if val then "true" else "false")) excludeBestAddressTag_query ), ( "include_actors", Maybe.map ((\val -> if val then "true" else "false")) includeActors_query ), ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.neighborEntitiesDecoder



listEntityTxs : (String) -> (Int) -> Maybe (Direction) -> Maybe (Int) -> Maybe (Int) -> Maybe (Order_) -> Maybe (String) -> Maybe (String) -> Maybe (Int) -> Api.Request Api.Data.AddressTxs
listEntityTxs currency_path entity_path direction_query minHeight_query maxHeight_query order_query tokenCurrency_query page_query pagesize_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}/txs"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "direction", Maybe.map (stringFromDirection) direction_query ), ( "min_height", Maybe.map (String.fromInt) minHeight_query ), ( "max_height", Maybe.map (String.fromInt) maxHeight_query ), ( "order", Maybe.map (stringFromOrder_) order_query ), ( "token_currency", Maybe.map (identity) tokenCurrency_query ), ( "page", Maybe.map (identity) page_query ), ( "pagesize", Maybe.map (String.fromInt) pagesize_query ) ]
        []
        Nothing
        Api.Data.addressTxsDecoder



searchEntityNeighbors : (String) -> (Int) -> (Direction) -> (Key) -> (List String) -> (Int) -> Maybe (Int) -> Maybe (Int) -> Api.Request (List Api.Data.SearchResultLevel1)
searchEntityNeighbors currency_path entity_path direction_query key_query value_query depth_query breadth_query skipNumAddresses_query =
    Api.request
        "GET"
        "/{currency}/entities/{entity}/search"
        [ ( "currency", identity currency_path ), ( "entity", String.fromInt entity_path ) ]
        [ ( "direction", Just <| (stringFromDirection) direction_query ), ( "key", Just <| (stringFromKey) key_query ), ( "value", Just <| (String.join "," << List.map identity) value_query ), ( "depth", Just <| (String.fromInt) depth_query ), ( "breadth", Maybe.map (String.fromInt) breadth_query ), ( "skip_num_addresses", Maybe.map (String.fromInt) skipNumAddresses_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.searchResultLevel1Decoder)

